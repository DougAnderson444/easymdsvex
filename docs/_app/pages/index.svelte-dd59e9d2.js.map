{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;gBAwJI,eAAa;;;;;;;;;;;gCAAb,eAAa;;;;;;;;;;;;;;;;;wBAMoC;;;;AANrD,uBAAsB;;;AAGrB,uBAA0F;;AAE3F,uBAEM;AADL,uBAA4D;;;;;;;;;;;;;;;;;;;;AA7ItD,cAAQ;AACR,mBAAa;;;AATR,gBAAuB,SAAI;QAC3B,eAAY;AAAA;QACZ,aAAU,CAAgB,KAAK,WAAK;AAAA;AACpC,qBAAa,QAAG;MAEvB;MACA;MAKA;MACA;MACA;MAEA;AAWJ,UAAO;AACN,iBAAaA;QACQC,cAAU;AAE/B,WAAO,iBAAiB,WAAY,WAAK;UACpC;AAAS;AAEb,iBAAW,MAAM,KAAK;AAGtB,cAAQ,IAAI,UAAU;AAAA;AAGjB;;;UACA,UAAU,cAAc;AAE9B,qCAAiB,QAAO;AAAA,MACvB,SAAO;AAAA,QACN;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;MAED,SAAS;AAAA,MACT,QAAM;AAAA;UAEJ,WAAW;AAAA,UACX,aAAwB,IAAe;AAAA;UAGvC,SAAoB,IAAe;AAAA;;;MAKrC;AAAA,MAEA,eAAa,CAAG,WAAW,mBAAc;AACxC,gCAAQ,0CAAY,YAAW,IAAI;AAE9B;iBAAc;YAGf,WAAS;AACZ,uBAAa,SAAS;AAAA;AAEvB,oBAAY;AACX,sBAAY;AAEZ,qBAAQ,MAAS,QAAQ,UAAU;AACnC,kBAAQ,IAAI,cAAc,SAAQ;AAClC,iBAAO,cAAc;AAGf,2BAAW,YAAY,KAAK,UAAU,UAAU;AAAA,WACpD;AAGI,8BAAe;AAAA;;AAIf,oBAAO,gBAA2B;AACpC,uBAAW,KAAI,CAAE,QAAQ,GAAK,QAAM,kBAAiB;AACrD,kBAAM,IAAI,gBAAgB,IAAI;;;QAGL;AAAA,kCAAiB,oBAAS,OAAG;AAC3D,uBAAe,YAAY;AACjB,gBAAM,UAAQ,eAAc;AAAA;;oBAIxC,QAAQ,WAAW,MAAK;AAExB,eAAW,WAAW,GAAG,UAAQ;UAE5B,WAAS;AACZ,qBAAa,SAAS;AAAA;AAEvB,kBAAY;AACX,oBAAY;wBACZ,QAAQ,WAAW,MAAK;cAClB,WAAW,OAAO,KAAK;AAAA,SAC3B;;AAKJ,6BAA0B,aAAwB;;mBAErC,QAAO,CAAE,SAAS,WAAM;AAClC,kBAAQ,IAAI,eAAe,YAAW;AAEhC,8BAAc;AACpB,kBAAQ,MAAM,YAAa,OAAC;AAC3B,oBAAQ,MAAM;AACd,oBAAQ,EAAE,KAAK,MAAM;AAAA;AAGtB,iBAAO,YAAY,aAAc,SAAQ,KAAK;AAAA;eAEvC;AACR,gBAAQ,IAAG,kBAAmB,OAAK;iCACV;AAAA;;;;;AAcP,8BAAqB;;;;;;;;;;;;;;;;AApIvC,mBAAU;AAAA;UAEX,IAAI;AAAA,UACJ,MAAM;AAAA,UACN,MAAM;AAAA,UACN,QAAQ,0CAAY,YAAW;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MC5B7B,eAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","names":["SvelteCompilerWorker","TestWorker"],"sources":["../../../../../src/lib/EasyMDSvex.svelte","../../../../../src/routes/index.svelte"],"sourcesContent":["<script lang=\"ts\">\r\n\t/*\r\n        Main export to add a easymdsvex mdsvex component to a browser\r\n    */\r\n\timport { onMount } from 'svelte';\r\n\timport type { Component, CacheSaver } from './types';\r\n\timport SvelteCompilerWorker from './repl/worker?worker'; // https://vitejs.dev/guide/features.html#import-with-query-suffixes\r\n\timport TestWorker from './testerWorker?worker';\r\n\r\n\texport let value: string | null = null;\r\n\texport let initialValue: string = `# Title\\nGo ahead, *make* **a** _note_!`;\r\n\texport let cacheValue: CacheSaver = (key, value) => {}; // save to a local db, cookies, IDB if you like\r\n\texport let TIMEOUT_MS = 900;\r\n\r\n\tlet markdowneditorelement: HTMLTextAreaElement;\r\n\tlet timeoutID: NodeJS.Timeout | null;\r\n\r\n\tconst DRAFT = '_DRAFT_';\r\n\tconst COMPONENTS = '_COMPONENTS_';\r\n\r\n\tlet compile: Function;\r\n\tlet compiled: string;\r\n\tlet worker: Worker;\r\n\tlet app: any;\r\n\tlet easymdsvex: EasyMDE | null;\r\n\r\n\t$: components = [\r\n\t\t{\r\n\t\t\tid: 0,\r\n\t\t\tname: 'App',\r\n\t\t\ttype: 'svx',\r\n\t\t\tsource: easymdsvex?.value() || value // value of the editor contents\r\n\t\t}\r\n\t];\r\n\r\n\tonMount(async () => {\r\n\t\tworker = new SvelteCompilerWorker();\r\n\t\tlet testworker = new TestWorker();\r\n\r\n\t\tworker.addEventListener('message', (event) => {\r\n\t\t\tif (timeoutID) return; // ignore if there's another worker thread going, wait for that output\r\n\t\t\t// no timer left, so use this compiled output\r\n\t\t\tcompiled = event.data.output;\r\n\t\t\t// warnings = event.data.warnings;\r\n\t\t\t// diagnostics = event.data.diagnostics;\r\n\t\t\tconsole.log('compiled');\r\n\t\t});\r\n\r\n\t\tconst EasyMDEModule = await import('easymde');\r\n\t\tconst EasyMDE = EasyMDEModule.default;\r\n\r\n\t\teasymdsvex = new EasyMDE({\r\n\t\t\ttoolbar: [\r\n\t\t\t\t'bold',\r\n\t\t\t\t'italic',\r\n\t\t\t\t'link',\r\n\t\t\t\t'image',\r\n\t\t\t\t'|',\r\n\t\t\t\t'preview',\r\n\t\t\t\t'side-by-side',\r\n\t\t\t\t'fullscreen',\r\n\t\t\t\t'guide'\r\n\t\t\t],\r\n\t\t\telement: markdowneditorelement,\r\n\t\t\tstatus: [\r\n\t\t\t\t{\r\n\t\t\t\t\tclassName: 'bytes',\r\n\t\t\t\t\tdefaultValue: function (el: HTMLElement) {\r\n\t\t\t\t\t\t// el.innerHTML = '0 of 566 bytes';\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonUpdate: function (el: HTMLElement) {\r\n\t\t\t\t\t\t// el.innerHTML = ' Save?';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tinitialValue,\r\n\t\t\t// here we replace marked with our custom MDSVex render, so it'll compile our MDSVEX\r\n\t\t\tpreviewRender: (plainText, previewElement) => {\r\n\t\t\t\tvalue = easymdsvex?.value() || null; // update component variable\r\n\r\n\t\t\t\tif (!value) return 'Compile Error, must not be blank';\r\n\r\n\t\t\t\t// post data msg to compiler\r\n\t\t\t\tif (timeoutID) {\r\n\t\t\t\t\tclearTimeout(timeoutID); // cancel any exisitng waiting\r\n\t\t\t\t}\r\n\t\t\t\ttimeoutID = setTimeout(async () => {\r\n\t\t\t\t\ttimeoutID = null; // clear any existing timeout\r\n\r\n\t\t\t\t\tcompiled = await compile(components);\r\n\t\t\t\t\tconsole.log('compiled', { compiled });\r\n\t\t\t\t\trender(previewElement);\r\n\r\n\t\t\t\t\t// also update store\r\n\t\t\t\t\tawait cacheValue(COMPONENTS, JSON.stringify(components));\r\n\t\t\t\t}, TIMEOUT_MS);\r\n\r\n\t\t\t\t// until the render is complete, just keep the current HTML\r\n\t\t\t\treturn previewElement.innerHTML;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfunction render(previewElement: HTMLElement) {\r\n\t\t\tconst blob = new Blob([compiled], { type: 'text/javascript' });\r\n\t\t\tconst url = URL.createObjectURL(blob);\r\n\r\n\t\t\t// mount the compiled code as a svelte app into the previewElement\r\n\t\t\timport(/* @vite-ignore */ url).then(function ({ default: App }) {\r\n\t\t\t\tpreviewElement.innerHTML = '';\r\n\t\t\t\tapp = new App({ target: previewElement });\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tvalue = easymdsvex.value();\r\n\r\n\t\teasymdsvex.codemirror.on('change', function () {\r\n\t\t\t// save after a brief pause, for more keystrokes\r\n\t\t\tif (timeoutID) {\r\n\t\t\t\tclearTimeout(timeoutID); // cancel any exisitng waiting\r\n\t\t\t}\r\n\t\t\ttimeoutID = setTimeout(async () => {\r\n\t\t\t\ttimeoutID = null; // delete timeout when this fn is called\r\n\t\t\t\tvalue = easymdsvex.value(); // expose via export the value of the editor\r\n\t\t\t\tawait cacheValue(DRAFT, value); // also update store, if one is set\r\n\t\t\t}, TIMEOUT_MS);\r\n\t\t});\r\n\r\n\t\t// compile MDSvex code in the browser\r\n\t\t// only init compile in the browser, not SSR server side\r\n\t\tcompile = async function (_components: Component[]): Promise<string> {\r\n\t\t\ttry {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tconsole.log('compiling', { _components });\r\n\t\t\t\t\t// Listen for messages on port1\r\n\t\t\t\t\tconst channel = new MessageChannel();\r\n\t\t\t\t\tchannel.port1.onmessage = (e) => {\r\n\t\t\t\t\t\tchannel.port1.close();\r\n\t\t\t\t\t\tresolve(e.data.output);\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// Transfer port2 to the iframe\r\n\t\t\t\t\tworker.postMessage(_components, [channel.port2]);\r\n\t\t\t\t});\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(`rpc-run [fail] ${error}`);\r\n\t\t\t\treturn `rpc-run [fail] ${error}`;\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n\r\n\t// $: if (compile && components) compile(components);\r\n</script>\r\n\r\n<h1>Simple MDSVex</h1>\r\n\r\n<svelte:head>\r\n\t<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/easymde/dist/easymde.min.css\" />\r\n</svelte:head>\r\n<div class=\"codemirror-container\">\r\n\t<textarea bind:this={markdowneditorelement} hidden={true} />\r\n</div>\r\n\r\n<style>\r\n\t.codemirror-container :global(.CodeMirror) {\r\n\t\tfont-family: Arial, monospace;\r\n\t}\r\n</style>\r\n","<script>\n\timport { EasyMDSvex } from '@douganderson444/easymdsvex';\n\n\tlet initialValue = `\n\n<script>\n\tlet name = 'dude'\n\timport List, { TaskList, Styling } from 'listavelte@0.1.1'\n<\\/script>\n\n# Title \nGo ahead {name}, *make* **a** _note_!\n\n<List \\/>\n\nHere is a named list, wrapped in style:\n\n\n<Styling>\n\t<TaskList \\/>\n<\\/Styling>\n\t`;\n\n\t// , Styling\n\t// <Styling>\n\t// \t</Styling>\n</script>\n\n<EasyMDSvex {initialValue} />\n"],"file":"pages/index.svelte-dd59e9d2.js"}